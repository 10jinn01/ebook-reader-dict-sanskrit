name: Update dictionaries

on:
  schedule:
    # At 00:00 every day
    - cron:  '0 0 * * *'

jobs:
  dicthtml:
    runs-on: ubuntu-latest

    # List of locales to generate
    # Note: as of now there is only one locale so it is OK,
    #       but there will be issues when using 2 or more
    #       because there will be history difference.
    #       A possible fix would be to do a "git pull" before
    #       adding and pusing changes but this is currently
    #       not implemented.
    strategy:
      matrix:
        locale:
          - fr

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install requirements
      run: python -m pip install -r requirements.txt

    # That step is meant to fail if there is no changes
    # Setting 'continue-on-error: true' will mark that step details:
    #   - on success:
    #     - outcome: success
    #     - conclusion: success
    #   - on failure:
    #     - outcome: failure
    #     - conclusion: success
    # So that if the step fails, the build is seen as success
    # but next steps are not executed. Exactly what we want.
    - name: Fetch and update the dictionary
      id: fetch_and_convert
      continue-on-error: true
      run: python -m scripts
      env:
        WIKI_LOCALE: ${{ matrix.locale }}

    - name: Upload the dictionary
      if: fetch_and_convert.outcome == 'success'
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.TOKEN }}
        file: data/fr/dicthtml-${{ matrix.locale }}.zip
        asset_name: dicthtml-${{ matrix.locale }}.zip
        tag: ${{ matrix.locale }}
        overwrite: true
  
    - name: Update the release description
      if: fetch_and_convert.outcome == 'success'
      run: python -m scripts --update-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WIKI_LOCALE: ${{ matrix.locale }}

    - name: Get current count
      if: fetch_and_convert.outcome == 'success'
      id: current_count
      run: echo "::set-output name=count::$(printf "%'d" "$(cat data/${{ matrix.locale }}/words.count)")"

    - name: Push to built branch
      if: fetch_and_convert.outcome == 'success'
      uses: Automattic/action-commit-to-branch@master
      with:
        branch: master
        commit_message: Updated dicthtml-${{ matrix.locale }} (${{ steps.current_count.outputs.count }} words)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
